# This is an example Acquia Pipelines configuration file. For complete
# documentation and other examples, see https://docs.acquia.com/acquia-cloud/develop/pipelines/yaml/
#
# If you'd like a project which sets up testing and Pipelines for you, consider
# using Acquia BLT: https://github.com/acquia/blt
version: 1.3.0
services:
  - mysql
  - php:
      version: 7.2
cde-databases:
  - equinix01
  - equinix02
events:
  build:
    steps:
    # Build a development codebase suitable for testing.
    # Uncomment these lines if you have included testing dependencies in
    # Composer's "require-dev" section.
    #  - build-dev:
    #      type: script
    #      script:
    #        - composer validate --no-check-all --ansi
    #        - composer install
    #
    # Install application.
    # Uncomment these lines if you have tests defined for your application.
    # (Note that you will also need to uncomment the "build-dev" step above so
    # that you have a codebase to work with.) This assumes you have a
    # well-configured settings.php file committed to your repo and all testing
    # dependencies like Behat and PHPUnit as dev
    # dependencies.
    #  - test:
    #      type: script
    #      script:
    #        - drush site-install
    #        - drush runserver --default-server=builtin 8080 &>/dev/null &
    #        - behat
    #        - phpunit
    #
    # Generate artifact. This is the codebase that will be available in the
    # Acquia Cloud interface.
      - build-artifact:
          type: script
          script:
            - composer install --no-dev --optimize-autoloader
  post-deploy:
    steps:
      # Deploy the build artifact to an on-demand environment,
      # and sync the specified databases.
      - deploy:
          script:
            - pipelines-deploy
            # See https://docs.acquia.com/acquia-cloud/develop/pipelines/databases/
            # - pipelines-sync-dbs
